//Collection Creation Queries

1. users

db.createCollection("users")

{
  "_id": ObjectId,        
  "name": String,         
  "email": String,        
  "attendance": [         
    Date("2023-10-01"),
    Date("2023-10-31")
  ],
  "tasks": [              
    {
      "task_id": ObjectId,
      "status": String,    
      "date": Date("2023-10-15")
    }
  ],
  "codekata_solved": Number 
}


2. codekata

db.createCollection("codekata")

{
  "_id": ObjectId,        
  "user_id": ObjectId,    
  "problems_solved": Number 
}


3. attendance

db.createCollection("attendance")

{
  "_id": ObjectId,        
  "user_id": ObjectId,    
  "date": Date("2023-10-01"), 
  "status": String        
}


4. topics

db.createCollection("topics")

{
  "_id": ObjectId,        
  "name": String,          
  "date": ISODate("2023-10-01") 
}


5. tasks

db.createCollection("tasks")

{
  "_id": ObjectId,         
  "name": String,          
  "date": ISODate("2023-10-15"),
  "status": String,        
  "user_id": ObjectId      
}


6. company_drives

db.createCollection("company_drives")

{
  "_id": ObjectId,           
  "company_name": String,    
  "date": Date("2023-10-20"),
  "students_appeared": [    
    ObjectId("user1_id"),
    ObjectId("user2_id")
  ]
}


7. mentors

db.createCollection("mentors")

{
  "_id": ObjectId,           
  "mentor_name": String,     
  "mentees": [               
    ObjectId("user1_id"),
    ObjectId("user2_id")
  ]
}


// Queries

1.Find all the topics and tasks which were taught in the month of October

// Find topics thought in October
db.topics.find({
  date: { 
    $gte: Date("2023-10-01"), 
    $lt: ISODate("2023-11-01") 
  }
})

// Find tasks assigned in October
db.tasks.find({
  date: { 
    $gte: Date("2023-10-01"), 
    $lt: Date("2023-11-01") 
  }
})


2.Find all the company drives which appeared between 15 Oct 2023 and 31 Oct 2023

db.company_drives.find({
  date: { 
    $gte: Date("2020-10-15"), 
    $lt: Date("2020-11-01") 
  }
})


3.Find all the company drives and students who are appeared for the placement

db.company_drives.aggregate([
  {
    $lookup: {
      from: "users",
      localField: "students_appeared",
      foreignField: "_id",
      as: "students"
    }
  }
])


4.Find the number of problems solved by the user in codekata

db.codekata.aggregate([
  {
    $group: {
      _id: "$user_id",
      totalProblemsSolved: { $sum: "$problems_solved" }
    }
  }
])


5.Find all the mentors with who has the mentee's count more than 15

db.mentors.find({
  $expr: {
    $gt: [{ $size: "$mentees" }, 15]
  }
})


6.Find the number of users who are absent and task is not submitted between 15 Oct 2020 and 31 Oct 2020

db.users.aggregate([
  {
    $match: {
      $and: [
        { attendance: { $elemMatch: { 
          $gte: Date("2020-10-15"), 
          $lt: ISODate("2020-11-01") } } },
        { tasks: { $elemMatch: { 
          date: { 
            $gte: Date("2020-10-15"), 
            $lt: Date("2020-11-01") 
          }, 
          status: "not submitted" 
        } } }
      ]
    }
  },
  {
    $count: "users_absent_and_task_not_submitted"
  }
])



